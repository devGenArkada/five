@font-face
{
    font-family: 'AkzidenzGroteskPro-Regular';

    src: url('../fonts/AkzidenzGrotesk/regular/fonts/akzidenzgroteskpro-regular.eot');
    /* IE 9 Compatibility Mode */
    src: url('../fonts/AkzidenzGrotesk/regular/fonts/akzidenzgroteskpro-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/AkzidenzGrotesk/regular/fonts/akzidenzgroteskpro-regular.woff2') format('woff2'), url('../fonts/AkzidenzGrotesk/regular/fonts/akzidenzgroteskpro-regular.woff') format('woff'), url('../fonts/AkzidenzGrotesk/regular/fonts/akzidenzgroteskpro-regular.ttf') format('truetype'), url('../fonts/AkzidenzGrotesk/regular/fonts/akzidenzgroteskpro-regular.svg#akzidenzgroteskpro-regular') format('svg');
    /* Chrome < 4, Legacy iOS */
}

@font-face
{
    font-family: 'AkzidenzGroteskPro-Light';

    src: url('../fonts/AkzidenzGrotesk/light/fonts/akzidenzgroteskpro-light.eot');
    /* IE 9 Compatibility Mode */
    src: url('../fonts/AkzidenzGrotesk/light/fonts/akzidenzgroteskpro-light.eot?#iefix') format('embedded-opentype'), url('../fonts/AkzidenzGrotesk/light/fonts/akzidenzgroteskpro-light.woff2') format('woff2'), url('../fonts/AkzidenzGrotesk/light/fonts/akzidenzgroteskpro-light.woff') format('woff'), url('../fonts/AkzidenzGrotesk/light/fonts/akzidenzgroteskpro-light.ttf') format('truetype'), url('../fonts/AkzidenzGrotesk/light/fonts/akzidenzgroteskpro-light.svg#akzidenzgroteskpro-light') format('svg');
    /* Chrome < 4, Legacy iOS */
}

@font-face
{
    font-family: 'AkzidenzGroteskPro-Md';

    src: url('../fonts/AkzidenzGrotesk/medium/fonts/akzidenzgroteskpro-md.eot');
    /* IE 9 Compatibility Mode */
    src: url('../fonts/AkzidenzGrotesk/medium/fonts/akzidenzgroteskpro-md.eot?#iefix') format('embedded-opentype'), url('../fonts/AkzidenzGrotesk/medium/fonts/akzidenzgroteskpro-md.woff2') format('woff2'), url('../fonts/AkzidenzGrotesk/medium/fonts/akzidenzgroteskpro-md.woff') format('woff'), url('../fonts/AkzidenzGrotesk/medium/fonts/akzidenzgroteskpro-md.ttf') format('truetype'), url('../fonts/AkzidenzGrotesk/medium/fonts/akzidenzgroteskpro-md.svg#akzidenzgroteskpro-md') format('svg');
    /* Chrome < 4, Legacy iOS */
}

*
{
    font: inherit;

    box-sizing: border-box;
    margin: 0;
    padding: 0;

    will-change: all;
}

*:before,
*:after
{
    box-sizing: border-box;

    will-change: all;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary
{
    display: block;
}

audio,
canvas,
progress,
video
{
    display: inline-block;

    vertical-align: baseline;
}

audio:not([controls])
{
    display: none;

    height: 0;
}

[hidden],
template
{
    display: none;
}

html
{
    font-family: sans-serif;

        -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-focus-ring-color: rgba(255,255,255,0);
}

body
{
    font-size: 100%;
    line-height: 1;

    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

a
{
    background: transparent;
}

*:focus,
*:active,
*:hover
{
    outline: 0;
}

hr
{
    box-sizing: content-box;
    height: 0;
}

ol,
ul
{
    list-style: none;
}

pre
{
    white-space: pre-wrap;
    tab-size: 4;
}

q
{
    quotes: '\201C' '\201D' '\2018' '\2019';
}

img
{
    border: 0;
}

svg:not(:root)
{
    overflow: hidden;
}

button,
input
{
    line-height: normal;
}

button,
select
{
    text-transform: none;
}

button
{
    overflow: visible;
}

button,
html input[type='button'],
input[type='reset'],
input[type='submit']
{
    cursor: pointer;

    -webkit-appearance: button;
}

button[disabled],
html input[disabled]
{
    cursor: default;
}

input[type='checkbox'],
input[type='radio']
{
    box-sizing: border-box;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button
{
    height: auto;
}

input[type='search'],
input[type='email'],
input[type='password'],
input[type='text'],
input[type='phone']
{
    box-sizing: border-box;

    -webkit-appearance: none;
}

input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration
{
    -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner
{
    padding: 0;

    border: 0;
}

textarea
{
    overflow: auto;

    vertical-align: top;
}

button,
input,
select[multiple],
textarea
{
    background-image: none;
}

input,
select,
textarea
{
    border-radius: 0;
    box-shadow: none;
}

input,
textarea
{
    resize: none;
    -webkit-user-select: text;
        -ms-user-select: text;
            user-select: text;
}

table
{
    border-spacing: 0;
    border-collapse: collapse;
}

html,
body
{
    font-size: 10px;
}

html
{
    scroll-behavior: smooth;
}

body
{
    font-family: 'AkzidenzGroteskPro-Regular', sans-serif;
}

a
{
    text-decoration: none;

    color: inherit;
}

.hide
{
    display: none;
}

.textInfoCard
{
    font-size: min(-webkit-calc(1.4rem + .52vw), 2.4rem);
    font-size: min(calc(1.4rem + .52vw), 2.4rem);
    line-height: 1.46;

    text-transform: uppercase;

    color: #fff;
    background-color: #23164b;
}

.textInfoCard strong
{
    font-weight: bold;
}

.header
{
    box-sizing: border-box;
    max-width: 1230px;
    margin: 0 auto;
    padding: 0 15px;
    padding-right: 20px;
    padding-left: 20px;
}

.headerTop
{
    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;

    padding-top: 15px;
    padding-bottom: 12px;

    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
            justify-content: space-between;
    -webkit-box-align: center;
    -webkit-align-items: center;
            align-items: center;
}

.headerTop img
{
    display: block;

    width: 100%;

    object-fit: cover;
}

.headerMenuWrapper
{
    padding: 21px 0 18px;
    padding-bottom: min(-webkit-calc(.85rem + .44vw), 1.7rem);
    padding-bottom: min(calc(.85rem + .44vw), 1.7rem);

    border-top: 1px dashed #777;
    border-bottom: 1px dashed #777;
}

.headerMenuWrapper--mobile
{
    position: fixed;
    z-index: 9;
    top: 0;
    right: 0;
    bottom: auto;
    left: 0;

    display: block !important;

    padding-top: 15px;
    padding-bottom: 15px;

    border: none;
    background-color: #eee;
}

.headerMenuWrapper--mobile .headerMenuList
{
            flex-direction: column;

    padding-right: 50px;
    padding-left: 50px;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    -webkit-box-align: center;
    -webkit-align-items: center;
            align-items: center;
}

.headerMenuWrapper--mobile .headerMenuList li
{
    margin: 13px auto;

    text-align: center;
}

.headerMenuWrapper--mobile .headerMenuList li a
{
    font-size: min(-webkit-calc(1.4rem + .31vw), 2rem);
    font-size: min(calc(1.4rem + .31vw), 2rem);
    line-height: 1.4;
}

.headerMenuList
{
    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;

    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
            justify-content: space-between;
}

.headerMenuList li a
{
    font-size: min(-webkit-calc(1.4rem + .31vw), 2rem);
    font-size: min(calc(1.4rem + .31vw), 2rem);
    line-height: 1.27%;

    text-decoration: none;

    color: #000;
}

.mobileMenu
{
    position: absolute;
    top: 25px;
    right: 18px;

    display: none;

    width: 30px;
    height: 30px;

    background-color: transparent;
}

.mobileMenuBtn
{
    padding: 0;

    cursor: pointer;

    border: none;
    outline: none;
    background-color: transparent;
}

.mobileMenuBtn::before,
.mobileMenuBtn::after
{
    display: block;

    width: 24px;
    height: 2px;
    margin-bottom: 4px;

    content: '';
    -webkit-transition: -webkit-transform .3s;
            transition: -webkit-transform .3s;
            transition:         transform .3s;
            transition:         transform .3s, -webkit-transform .3s;

    background-color: #000;
}

.mobileMenuBtn::after
{
    width: 24px;
    margin-right: 6px;
    margin-bottom: 0;
    margin-left: auto;
}

.mobileMenuBtn--active
{
    position: fixed;
    z-index: 999;
}

.mobileMenuBtn__line
{
    display: block;

    width: 24px;
    height: 2px;
    margin-bottom: 4px;

    -webkit-transition: opacity 1s;
            transition: opacity 1s;

    opacity: 1;
    background-color: #000;
}

.mobileMenuBtn.mobileMenuBtn--active .mobileMenuBtn__line
{
    -webkit-transition: opacity 0s;
            transition: opacity 0s;

    opacity: 0;
}

.mobileMenuBtn.mobileMenuBtn--active::after
{
    width: 24px;

    -webkit-transform: translateY(-6px) rotate(-135deg);
            transform: translateY(-6px) rotate(-135deg);
}

.mobileMenuBtn.mobileMenuBtn--active::before
{
    -webkit-transform: translateY(6px) rotate(135deg);
            transform: translateY(6px) rotate(135deg);
}

.footerTop
{
    border-bottom: 1px dashed #000;
}

.footerTop__title
{
    font-family: 'Oswald', sans-serif;
    font-size: min(-webkit-calc(1.4rem + 3.02vw), 7.2rem);
    font-size: min(calc(1.4rem + 3.02vw), 7.2rem);
    font-weight: 200;
    line-height: 1;

    width: -webkit-max-content;
    width:         max-content;
    margin-bottom: -3px;
    margin-left: 10%;

    text-transform: uppercase;

    color: #23164b;
    background-color: #fff;
}

.footerContent
{
    display: -webkit-box;
    display: -webkit-flex;
    display:         flex;

    max-width: 1230px;
    margin: 0 auto;
    padding: 0 15px;
    padding-top: min(-webkit-calc(3.1rem + 1.61vw), 6.2rem);
    padding-top: min(calc(3.1rem + 1.61vw), 6.2rem);
    padding-right: 20px;
    padding-bottom: min(-webkit-calc(2.2rem + 1.15vw), 4.4rem);
    padding-bottom: min(calc(2.2rem + 1.15vw), 4.4rem);
    padding-left: 20px;

    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
            justify-content: space-between;
    -webkit-box-align: center;
    -webkit-align-items: center;
            align-items: center;
}

.footerContentColumn:last-child
{
    margin-right: 200px;
}

.footerContentLogoBox
{
    margin-left: min(-webkit-calc(8.5rem + 4.43vw), 17rem);
    margin-left: min(calc(8.5rem + 4.43vw), 17rem);
}

.footerContentLogoBox img
{
    display: block;

    width: 100%;
    height: auto;

    object-fit: cover;
}

.footerContentColumnItem
{
    font-size: min(-webkit-calc(1.4rem + .21vw), 1.8rem);
    font-size: min(calc(1.4rem + .21vw), 1.8rem);
    font-weight: 400;
    line-height: 1.277777777777778;

    margin-bottom: 35px;

    color: #393939;
}

.footerContentColumnItem:last-child
{
    margin-bottom: 0;
}

.footerContentColumnItem__title
{
    margin-bottom: 3px;
}

.footerContentColumnItem__text
{
    font-weight: 300;
}

.footerContentColumnItemSocials a
{
    display: inline-block;

    margin-right: 25px;
}

.footerContentColumnItemSocials a:last-child
{
    margin-right: 0;
}

.footerContentColumnItemSocials img
{
    display: block;

    -webkit-transition: all .3s;
            transition: all .3s;
}

.footerContentColumnItemSocials a:hover img
{
    -webkit-transform: scale(1.2);
            transform: scale(1.2);
}

.footerBottom
{
    padding: 20px 0;

    background: #23164b;
}

.footerBottom p
{
    font-size: min(-webkit-calc(1.4rem + .1vw), 1.6rem);
    font-size: min(calc(1.4rem + .1vw), 1.6rem);

    max-width: 1230px;
    margin: 0 auto;
    padding: 0 15px;
    padding-right: 20px;
    padding-left: 20px;

    text-align: center;

    color: #fff;
}

@media (min-width: 1200px)
{
    .headerMenuList li a:hover
    {
        text-decoration: underline;
    }
}

@media (max-width: 1500px)
{
    .headerMenuList li a
    {
        font-size: min(-webkit-calc(1.4rem + .16vw), 1.7rem);
        font-size: min(calc(1.4rem + .16vw), 1.7rem);
    }
}

@media (max-width: 1400px)
{
    .headerMenuList li a
    {
        font-size: min(-webkit-calc(1.4rem + .1vw), 1.6rem);
        font-size: min(calc(1.4rem + .1vw), 1.6rem);
    }
}

@media (max-width: 1300px)
{
    .headerMenuList li a
    {
        font-size: min(-webkit-calc(1.4rem + 0vw), 1.4rem);
        font-size: min(calc(1.4rem + 0vw), 1.4rem);
    }
}

@media screen and (max-width: 1200px)
{
    .headerTop .headerTop__flagBox
    {
        display: none;
    }

    .headerTop .headerTopLogoBox
    {
        margin: 0 auto;
    }

    .headerMenuWrapper
    {
        display: none;
    }
}

@media (max-width: 1200px)
{
    .mobileMenu
    {
        z-index: 10;

        display: block;
    }
}

@media screen and (max-width: 768px)
{
    .header
    {
        padding-right: 15px;
        padding-left: 15px;
    }

    .footerContent
    {
        padding-right: 15px;
        padding-left: 15px;
    }

    .footerContentColumn:last-child
    {
        margin-right: 0;
    }

    .footerContentLogoBox
    {
        margin-left: 0;
    }

    .footerBottom p
    {
        padding-right: 15px;
        padding-left: 15px;
    }
}

@media screen and (max-width: 480px)
{
    .footerContent
    {
                flex-direction: column;

        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
    }

    .footerContentLogoBox img
    {
        max-width: 70px;
    }

    .footerContentLogoBox img
    {
        margin-bottom: min(-webkit-calc(1.5rem + .78vw), 3rem);
        margin-bottom: min(calc(1.5rem + .78vw), 3rem);
    }

    .footerContentColumnItem
    {
        text-align: center;
    }

    .footerContentColumnItem:first-child
    {
        margin-bottom: min(-webkit-calc(.25rem + .13vw), .5rem);
        margin-bottom: min(calc(.25rem + .13vw), .5rem);
    }

    .footerContentColumnItem--social
    {
        margin-top: 15px;
    }

    .footerContentColumnItem__title
    {
        display: inline-block;
    }

    .footerContentColumnItem__text
    {
        display: inline-block;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
